legend.box.margin = margin(-3.5,0,-2,-10,"mm"),
legend.direction = "horizontal",
legend.box = "horizontal") +
guides(color=guide_colorbar(title.position = "top",
title.theme = element_text(size = 10,color="grey20"),
barwidth = unit(50,"mm"),order=2,
barheight = unit(2,"mm"),nbin=100,ticks.linewidth=1.2,
label.theme = element_text(size=8,color="grey30")),
shape=guide_legend(nrow=2,order=1))
ImprovementPlot2
ImprovementPlot2 <- GainTab %>%
rename(ID=target) %>%
left_join(TestSet %>%
filter(!ID%in%c("None","Self"))) %>%
mutate(OPEN=ifelse(OpenAS==1,"Open AS","Closed AS"),
UnitCh=as.numeric(TotCharge)/as.numeric(NumStAl)) %>%
ggplot(aes(x=as.numeric(TotCharge),y=100*Gain,shape=OPEN,color=None)) +
scale_color_gradientn(colors=c("dark red","red","orange","yellow","dark green"),
name="Conventional docking accuracy",
labels = scales::percent_format(accuracy = 1)) +
scale_shape_manual(values=c(16,1),name="") +
scale_x_continuous(name="Protein total charge at pH 7") +
scale_y_continuous(name="Improvement (%)",
position = "left") +
geom_smooth(span=3,level=0.75,aes(group=NA),color="grey25") +
geom_point(size=3,aes(group=ID),stroke=1.2,alpha=0.8) +
theme_bw() +
geom_text(label="Ribonuclease A",x=11,y=46,size=3,hjust=1,color="#a23333") +
geom_text(label="Thymidylate synthase",x=-17,y=38,size=3,hjust=0,color="#fc3333") +
geom_text(label="Ribonuclease T1",x=-27,y=32,size=3,hjust=0,color="#ff7733") +
geom_text(label="Poly(ADP-ribose) polymerase",x=12,y=24.58,size=3,hjust=1,color="#b03335") +
theme(legend.position = "bottom",
legend.box.margin = margin(-3.5,0,-2,-10,"mm"),
legend.direction = "horizontal",
legend.box = "horizontal") +
guides(color=guide_colorbar(title.position = "top",
title.theme = element_text(size = 10,color="grey20"),
barwidth = unit(50,"mm"),order=2,
barheight = unit(2,"mm"),nbin=100,ticks.linewidth=1.2,
label.theme = element_text(size=8,color="grey30")),
shape=guide_legend(nrow=2,order=1))
ImprovementPlot2
ggsave("ImprovementPlot_TotCharge_v2.png",ImprovementPlot2,height=8,width=9,dpi=1000,units="cm")
ImprovementPlot2 <- GainTab %>%
rename(ID=target) %>%
left_join(TestSet %>%
filter(!ID%in%c("None","Self"))) %>%
mutate(OPEN=ifelse(OpenAS==1,"Open AS","Closed AS"),
UnitCh=as.numeric(TotCharge)/as.numeric(NumStAl)) %>%
ggplot(aes(x=as.numeric(TotCharge),y=100*Gain,shape=OPEN,color=None)) +
scale_color_gradientn(colors=c("dark red","red","orange","yellow","dark green"),
name="Conventional docking accuracy",
labels = scales::percent_format(accuracy = 1)) +
scale_shape_manual(values=c(16,1),name="") +
scale_x_continuous(name="Protein total charge at pH 7") +
scale_y_continuous(name="Improvement (%)",
position = "left") +
geom_smooth(span=3,level=0.75,aes(group=NA),color="grey25") +
geom_point(size=3,aes(group=ID),stroke=1.2,alpha=0.8) +
theme_bw() +
geom_text(label="Ribonuclease A",x=11,y=46,size=3,hjust=1,color="#a23333") +
geom_text(label="Thymidylate synthase",x=-17,y=38,size=3,hjust=0,color="#fc3333") +
geom_text(label="Ribonuclease T1",x=-27,y=32,size=3,hjust=0,color="#ff7733") +
geom_text(label="Poly(ADP-ribose) polymerase",x=15,y=24.58,size=3,hjust=1,color="#b03335") +
theme(legend.position = "bottom",
legend.box.margin = margin(-3.5,0,-2,-10,"mm"),
legend.direction = "horizontal",
legend.box = "horizontal") +
guides(color=guide_colorbar(title.position = "top",
title.theme = element_text(size = 10,color="grey20"),
barwidth = unit(50,"mm"),order=2,
barheight = unit(2,"mm"),nbin=100,ticks.linewidth=1.2,
label.theme = element_text(size=8,color="grey30")),
shape=guide_legend(nrow=2,order=1))
ImprovementPlot2
ggsave("ImprovementPlot_TotCharge_v2.png",ImprovementPlot2,height=8,width=9,dpi=1000,units="cm")
GainTab %>%
rename(ID=target) %>%
left_join(TestSet %>%
filter(!ID%in%c("None","Self"))) %>%
mutate(OPEN=ifelse(OpenAS==1,"Open AS","Closed AS"),
UnitCh=as.numeric(TotCharge)/as.numeric(NumStAl)) %>% View
ROCsTab <- GainTab %>%
rename(ID=target) %>%
left_join(TestSet %>%
left_join(TestSet %>%
filter(!ID%in%c("None","Self")))) %>%
mutate(OPEN=ifelse(OpenAS==1,"Open","Closed"),
#TotCh=TotCh/as.numeric(NumStAl),
None_plot=ifelse(abs(Gain)>0.031,None+0.015,None),
Self_plot=ifelse(abs(Gain)>0.031,Self-0.015,Self))
ROCsPlot <- ROCsTab %>%
ggplot(aes(group=OPEN)) +
scale_color_manual(values=c("#377eb8","#e41a1c"), name="Docking type") +
scale_x_continuous(name="Protein total charge at pH 7") +
scale_y_continuous(name="VS accuracy (%)") +
#scale_linetype(values=c("solid","dashed"),name="Active site type") +
scale_alpha_manual(values=c(0.8,0.4),name="Active site type") +
geom_point(data=. %>% rename(ASD=None,OTD=Self) %>%
gather("key","value",ASD,OTD),
aes(x=TotCharge,y=100*value,color=key),size=2) +
geom_segment(aes(x=TotCharge,xend=TotCh,y=100*None,yend=100*Self,alpha=factor(OPEN)),
#arrow=arrow(length = unit(0.14, "cm"),angle=15),
lineend = "round",
color="grey10",size=0.4) +
theme_bw() +
#geom_text(label="Ribonuclease A",x=0,y=47,size=1.7,hjust=1) +
#geom_text(label="Thymidylate synthase",x=-34.5,y=60.5,size=1.7,hjust=0) +
#geom_text(label="Ribonuclease T1",x=-35.5,y=65.2,size=1.7,hjust=0) +
#geom_text(label="Poly(ADP-ribose) polymerase",x=-8,y=43.7,size=1.7,hjust=1) +
theme(legend.position = "bottom",
legend.box = "vertical",
legend.key.width = unit(4,"mm"),
legend.text = element_text(margin = margin(0,0,0,-2,"mm")),
legend.box.margin = margin(2,0,0,0,"mm"),
legend.margin = margin(-5,0,0,0,"mm"))
ROCsPlot
ROCsPlot <- ROCsTab %>%
ggplot(aes(group=OPEN)) +
scale_color_manual(values=c("#377eb8","#e41a1c"), name="Docking type") +
scale_x_continuous(name="Protein total charge at pH 7") +
scale_y_continuous(name="VS accuracy (%)") +
#scale_linetype(values=c("solid","dashed"),name="Active site type") +
scale_alpha_manual(values=c(0.8,0.4),name="Active site type") +
geom_point(data=. %>% rename(ASD=None,OTD=Self) %>%
gather("key","value",ASD,OTD),
aes(x=TotCharge,y=100*value,color=key),size=2) +
geom_segment(aes(x=TotCharge,xend=TotCharge,y=100*None,yend=100*Self,alpha=factor(OPEN)),
#arrow=arrow(length = unit(0.14, "cm"),angle=15),
lineend = "round",
color="grey10",size=0.4) +
theme_bw() +
#geom_text(label="Ribonuclease A",x=0,y=47,size=1.7,hjust=1) +
#geom_text(label="Thymidylate synthase",x=-34.5,y=60.5,size=1.7,hjust=0) +
#geom_text(label="Ribonuclease T1",x=-35.5,y=65.2,size=1.7,hjust=0) +
#geom_text(label="Poly(ADP-ribose) polymerase",x=-8,y=43.7,size=1.7,hjust=1) +
theme(legend.position = "bottom",
legend.box = "vertical",
legend.key.width = unit(4,"mm"),
legend.text = element_text(margin = margin(0,0,0,-2,"mm")),
legend.box.margin = margin(2,0,0,0,"mm"),
legend.margin = margin(-5,0,0,0,"mm"))
ROCsPlot
ROCsPlot <- ROCsTab %>%
ggplot(aes(group=OPEN)) +
scale_color_manual(values=c("#377eb8","#e41a1c"), name="Docking type") +
scale_x_continuous(name="Protein total charge at pH 7") +
scale_y_continuous(name="VS accuracy (%)") +
#scale_linetype(values=c("solid","dashed"),name="Active site type") +
scale_alpha_manual(values=c(0.8,0.4),name="Active site type") +
geom_point(data=. %>% rename(ASD=None,OTD=Self) %>%
gather("key","value",ASD,OTD),
aes(x=as.numeric(TotCharge),y=100*value,color=key),size=2) +
geom_segment(aes(x=as.numeric(TotCharge),xend=as.numeric(TotCharge),y=100*None,yend=100*Self,alpha=factor(OPEN)),
#arrow=arrow(length = unit(0.14, "cm"),angle=15),
lineend = "round",
color="grey10",size=0.4) +
theme_bw() +
#geom_text(label="Ribonuclease A",x=0,y=47,size=1.7,hjust=1) +
#geom_text(label="Thymidylate synthase",x=-34.5,y=60.5,size=1.7,hjust=0) +
#geom_text(label="Ribonuclease T1",x=-35.5,y=65.2,size=1.7,hjust=0) +
#geom_text(label="Poly(ADP-ribose) polymerase",x=-8,y=43.7,size=1.7,hjust=1) +
theme(legend.position = "bottom",
legend.box = "vertical",
legend.key.width = unit(4,"mm"),
legend.text = element_text(margin = margin(0,0,0,-2,"mm")),
legend.box.margin = margin(2,0,0,0,"mm"),
legend.margin = margin(-5,0,0,0,"mm"))
ROCsPlot
GainTab %>%
rename(ID=target) %>%
left_join(TestSet2 %>%
left_join(TestSet %>%
select(ID,OpenAS,NumStAl))) %>%
mutate(OPEN=ifelse(OpenAS==1,"Open AS","Closed AS"),
TotCh=TotCh/as.numeric(NumStAl)) %>%
filter(pH==7) %>%
filter(TotCh<=-25|TotCh>=0) %>%
summarise(MeanNone=mean(None),
MeanSelf=mean(Self),
MeanGain=mean(Gain),
n=n())
GainTab %>%
rename(ID=target) %>%
left_join(TestSet %>%
left_join(TestSet %>%
filter(!ID%in%c("None","Self")))) %>%
mutate(OPEN=ifelse(OpenAS==1,"Open AS","Closed AS")) %>%
filter(as.numeric(TotCharge)<=-25|as.numeric(TotCharge)>=0) %>%
summarise(MeanNone=mean(None),
MeanSelf=mean(Self),
MeanGain=mean(Gain),
n=n())
GainTab %>%
rename(ID=target) %>%
left_join(TestSet %>%
left_join(TestSet %>%
filter(!ID%in%c("None","Self")))) %>%
mutate(OPEN=ifelse(OpenAS==1,"Open AS","Closed AS")) %>%
filter(as.numeric(TotCharge)<=-15|as.numeric(TotCharge)>=0) %>%
summarise(MeanNone=mean(None),
MeanSelf=mean(Self),
MeanGain=mean(Gain),
n=n())
ROCsTab %>%
filter(as.numeric(TotCharge)<=-15|as.numeric(TotCharge)>=0) %>%
#filter(OPEN=="Open") %>%
#filter(None<0.71) %>%
group_by(OPEN) %>%
summarise(None=mean(None)*100,
Self=mean(Self)*100,
Gain=mean(Gain)*100)
ROCsTab %>%
filter(as.numeric(TotCharge)<=-15|as.numeric(TotCharge)>=0) %>%
#filter(OPEN=="Open") %>%
#filter(None<0.71) %>%
group_by(OPEN) %>%
summarise(None=mean(None)*100,
Self=mean(Self)*100,
Gain=mean(Gain)*100,
count=n())
ROCsTab %>%
filter(as.numeric(TotCharge)<=-15|as.numeric(TotCharge)>=0) %>%
filter(OPEN=="Open")
ROCsTab %>%
filter(as.numeric(TotCharge)<=-14|as.numeric(TotCharge)>=0) %>%
filter(OPEN=="Open")
DataOTD_grp1_sepRuns %>% filter(Baseline%in%c("Self","None"),
QSurf%in%c(NA,0.5),
QAS%in%c(NA,0),
QRunSurf%in%c(NA,"Max")) %>%
mutate(Baseline=factor(Baseline,levels=c("None","Self"))) %>%
left_join(TestSet %>% select(ID,Type,`Full name`) %>%
rename(target=ID,Target=`Full name`)) %>%
dcast(Target+target+Type~Baseline,value.var = "ROC") %>%
summarise(Gain=sprintf("%.1f", 100*mean(Self-None)),
Self=sprintf("%.1f", 100*mean(Self)),
None=sprintf("%.1f", 100*mean(None))) %>%
select(None,Self,Gain)
GainTab %>%
mutate(Gain=sprintf("%.1f", 100*Gain),
Self=sprintf("%.1f", 100*Self),
None=sprintf("%.1f", 100*None)) %>%
arrange(as.numeric(None)) %>%
format(digits=5)
GainTab %>%
mutate(Gain=sprintf("%.1f", 100*Gain),
Self=sprintf("%.1f", 100*Self),
None=sprintf("%.1f", 100*None)) %>%
arrange(as.numeric(None)) %>%
format(digits=5) %>%
left_join(TestSet %>% select(target,TotCharge)) %>%
arrange(None)
View(TestSet)
GainTab %>%
mutate(Gain=sprintf("%.1f", 100*Gain),
Self=sprintf("%.1f", 100*Self),
None=sprintf("%.1f", 100*None)) %>%
arrange(as.numeric(None)) %>%
format(digits=5) %>%
left_join(TestSet %>% rename(target=ID) %>% select(target,TotCharge)) %>%
arrange(None)
GainTab %>%
mutate(Gain=sprintf("%.1f", 100*Gain),
Self=sprintf("%.1f", 100*Self),
None=sprintf("%.1f", 100*None)) %>%
arrange(as.numeric(None)) %>%
format(digits=5) %>%
left_join(TestSet %>% rename(target=ID) %>% select(target,TotCharge)) %>%
arrange(None) %>%
write_delim("ProtList_wCharges.csv",";")
Data10sampOTS <- read_delim(file="DataOTS_10runs.csv",";")
Data10sampOTS %>% head()
DataSurf_sepRuns %>% head()
GetSurfRun <- compiler::cmpfun(function(QRS,Energies){
Quant=unique(QRS)
if(Quant=="Arb"){
sample(Energies,1) %>% return()
}
else{
quantile(Energies,probs=as.numeric(Quant)) %>% return()
}
})
GetSurfRunVal <- compiler::cmpfun(function(df){
df %>%
crossing(data_frame(QRunSurf=c(seq(0,1,0.1),"Arb"))) %>%
group_by(QRunSurf,ligand,grid) %>%
partition(cluster=cl) %>%
summarize(SurfRunVal=GetSurfRun(QRunSurf,top.dG)) %>%
collect()
})
GetSurfRunVal <- compiler::cmpfun(function(df){
df %>%
crossing(data_frame(QRunSurf=1)) %>%
group_by(QRunSurf,ligand,grid) %>%
partition(cluster=cl) %>%
summarize(SurfRunVal=GetSurfRun(QRunSurf,top.dG)) %>%
collect()
})
DataSurf_sepRuns_0_A <- Data10sampOTS %>%
group_by(target) %>%
do(SurfRunVal0=GetSurfRunVal(.)) %>%
ungroup() %>%
unnest(cols = c(SurfRunVal0))
GetSurfRunVal <- compiler::cmpfun(function(df){
df %>%
crossing(data_frame(QRunSurf=1)) %>%
group_by(QRunSurf,ligand,grid) %>%
summarize(SurfRunVal=GetSurfRun(QRunSurf,top.dG))
})
DataSurf_sepRuns_0_A <- Data10sampOTS %>%
group_by(target) %>%
do(SurfRunVal0=GetSurfRunVal(.)) %>%
ungroup() %>%
unnest(cols = c(SurfRunVal0))
AllMaxOTS <- Data10sampOTS %>%
group_by(target,ligand,grid) %>%
summarise(max.dG=max(top.dG))
AllMaxOTS %>% head()
DataSurf_sepRuns %>% head()
AllMaxOTS2 <- AllMaxOTS %>%
left_join(DataSurf_sepRuns %>%
filter(QSurf==0.5,QRunSurf==1) %>%
select(target,ligand,SurfVal)) %>%
mutate(diffSV=max.dG-SurfVal)
AllMaxOTS2 %>% head
AllMaxOTS2 %>%
filter(abs(diffSV)<0.5)
AllMaxOTS2 %>%
filter(abs(diffSV)<0.5) %>%
group_by(target,grid) %>%
summarise(count=n()) %>%
View
AllMaxOTS2 %>%
#filter(abs(diffSV)<0.5) %>%
group_by(target,grid) %>%
summarise(count=n()) %>%
View
AllMaxOTS2 %>%
#filter(abs(diffSV)<0.5) %>%
group_by(target,grid) %>%
summarise(length(unique(ligand))) %>%
View
AllMaxOTS2 %>%
#filter(abs(diffSV)<0.5) %>%
group_by(target,grid) %>%
summarise(ratio=n()/length(unique(ligand))) %>%
View
AllMaxOTS2 %>%
filter(abs(diffSV)<0.5) %>%
group_by(target,grid) %>%
summarise(ratio=length(unique(ligand))) %>%
View
AllMaxOTS2 %>%
filter(abs(diffSV)<0.1) %>%
group_by(target,grid) %>%
summarise(ratio=n()) %>%
View
AllMaxOTS2 %>%
filter(abs(diffSV)<0.1) %>%
group_by(target,grid) %>%
summarise(ratio=n()) %>%
group_by(target) %>%
filter(ratio==max(ratio)) %>%
View
AllMaxOTS2 %>%
filter(abs(diffSV)<0.5) %>%
group_by(target,grid) %>%
summarise(ratio=length(unique(.$ligand)))
AllMaxOTS2 %>%
filter(abs(diffSV)<0.5) %>%
group_by(target,grid) %>%
summarise(ratio=length(unique(.$ligand))) %>% View()
AllMaxOTS2 %>%
filter(abs(diffSV)<0.5) %>%
group_by(target,grid) %>%
summarise(ratio=length(unique(filter(.$ligand,grid==grid)))) %>% View()
AllMaxOTS2 %>%
#filter(abs(diffSV)<0.5) %>%
group_by(target,grid) %>%
summarise(ratio=sum(abs(diffSV)<0.5)/n()) %>% View()
AllMaxOTS2 %>%
#filter(abs(diffSV)<0.5) %>%
group_by(target,grid) %>%
summarise(ratio=sum(abs(diffSV)<0.5)/n()) %>%
group_by(target) %>%
filter(ratio==max(ratio)) %>%
View
BestSurfSites <- AllMaxOTS2 %>%
#filter(abs(diffSV)<0.5) %>%
group_by(target,grid) %>%
summarise(ratio=sum(abs(diffSV)<0.5)/n()) %>%
group_by(target) %>%
filter(ratio==max(ratio))
BestSurfSites %>% write_delim("BestSites.csv",";")
DataSurf_sepRuns %>% head()
DataAS
Data10sampOTS
BestSurfSites
AllMaxOTS %>% semi_join(BestSurfSites)
DataAS %>% filter(QAS==0) %>% select(-QAS)
DataOTD_BSS_Self_sepRuns_doROC <-
left_join(DataAS %>% filter(QAS==0) %>% select(-QAS),
AllMaxOTS %>% semi_join(BestSurfSites) %>% select(-grid)) %>%
group_by(target) %>%
do(doROC=roc(.$type,.$ASVal-.$max.dG,direction=">"))
DataOTD_BSS_Self_sepRuns_doROC
DataOTD_BSS_sepRuns_doROC <-
left_join(DataAS %>% filter(QAS==0) %>% select(-QAS),
AllMaxOTS %>% semi_join(BestSurfSites) %>% select(-grid)) %>%
group_by(target) %>%
do(doROC=roc(.$type,.$ASVal-.$max.dG,direction=">"))
DataOTD_BSS_sepRuns <- DataOTD_BSS_sepRuns_doROC %>%
mutate(ROC=unlist(doROC,recursive=F)$auc) %>%
select(-doROC) %>%
ungroup() %>%
mutate(Baseline="BestSurfSite")
DataOTD_BSS_sepRuns
DataOTD_Self_sepRuns
DataOTD_Self_sepRuns %>%
filter(QAS==0,QSurf==0.5,QRunSurf==1) %>%
rename(ROC_OTD=ROC) %>%
select(-Baseline) %>%
left_join(DataOTD_BSS_sepRuns %>%
rename(ROC_BSS=ROC) %>%
select(-Baseline))
DataOTD_Self_sepRuns %>%
filter(QAS==0,QSurf==0.5,QRunSurf==1) %>%
rename(ROC_OTD=ROC) %>%
select(target,ROC_OTD) %>%
left_join(DataOTD_BSS_sepRuns %>%
rename(ROC_BSS=ROC) %>%
select(-Baseline)) %>%
DataOTD_Self_sepRuns %>%
filter(QAS==0,QSurf==0.5,QRunSurf==1) %>%
rename(ROC_OTD=ROC) %>%
select(target,ROC_OTD) %>%
left_join(DataOTD_BSS_sepRuns %>%
rename(ROC_BSS=ROC) %>%
select(-Baseline))
DataOTD_Self_sepRuns %>%
filter(QAS==0,QSurf==0.5,QRunSurf==1) %>%
rename(ROC_OTD=ROC) %>%
select(target,ROC_OTD) %>%
left_join(DataOTD_BSS_sepRuns %>%
rename(ROC_BSS=ROC) %>%
select(-Baseline))
DataOTD_Self_sepRuns %>%
filter(QAS==0,QSurf==0.5,QRunSurf==1) %>%
rename(ROC_OTD=ROC) %>%
select(target,ROC_OTD) %>%
left_join(DataOTD_BSS_sepRuns %>%
rename(ROC_BSS=ROC) %>%
select(-Baseline)) %>%
mutate(diff=ROC_BSS-ROC_OTD)
DataOTD_Self_sepRuns %>%
filter(QAS==0,QSurf==0.5,QRunSurf==1) %>%
rename(ROC_OTD=ROC) %>%
select(target,ROC_OTD) %>%
left_join(DataOTD_BSS_sepRuns %>%
rename(ROC_BSS=ROC) %>%
select(-Baseline)) %>%
mutate(diff=100*(ROC_BSS-ROC_OTD))
DataOTD_Self_sepRuns %>%
filter(QAS==0,QSurf==0.5,QRunSurf==1) %>%
rename(ROC_OTD=ROC) %>%
select(target,ROC_OTD) %>%
left_join(DataOTD_BSS_sepRuns %>%
rename(ROC_BSS=ROC) %>%
select(-Baseline)) %>%
mutate(diff=100*(ROC_BSS-ROC_OTD)) %>% write_delim("BestSites_performance.csv",";")
View(BestSurfSites)
DataOTD_grp2_sepRuns <- read.csv("DataOTD_grp2_sepRuns_Prod.csv")
Data3sampBasOTS <- read_delim(file="DataBasOTS_3runs.csv",";")
#Raw data:
#
Data10sampAS <- read_delim(file="DataAS_10runs.csv",";")
GetSurfRunVal_p2p <- compiler::cmpfun(function(df){
df %>%
crossing(QRunSurf=c(1)) %>%
group_by(QRunSurf,ligand,grid) %>%
partition(cluster=cl) %>%
summarize(SurfRunVal=GetSurfRun(QRunSurf,top.dG)) %>%
collect()
})
cluster_copy(c("GetSurfRunVal_p2p","GetSurfRun","Data3sampBasOTS"),cluster=cl)
GetSurfRunVal_p2p <- compiler::cmpfun(function(df){
df %>%
crossing(QRunSurf=c(1)) %>%
group_by(QRunSurf,ligand,grid) %>%
#partition(cluster=cl) %>%
summarize(SurfRunVal=GetSurfRun(QRunSurf,top.dG)) #%>%
#collect()
})
DataSurf_sepRuns_p2p_0 <- Data3sampBasOTS %>%
group_by(target) %>%
do(SurfRunVal0=GetSurfRunVal_p2p(.)) %>%
ungroup() %>%
unnest(cols = c(SurfRunVal0))
GetSurfVal_p2p <- compiler::cmpfun(function(df){
df %>%
crossing(QSurf=c(0.5)) %>%
group_by(ligand,QSurf,QRunSurf) %>%
#partition(cluster=cl) %>%
summarize(SurfVal=quantile(SurfRunVal,probs=unique(QSurf))) #%>%
#collect()
})
DataSurf_sepRuns_p2p_1 <- DataSurf_sepRuns_p2p_0 %>%
group_by(target) %>%
do(SurfVal0=GetSurfVal_p2p(.)) %>%
ungroup() %>%
unnest(cols = c(SurfVal0))
